
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the Catalyst Academy platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "User's first name."
        },
        "lastName": {
          "type": "string",
          "description": "User's last name."
        },
        "bio": {
          "type": "string",
          "description": "A short bio for the user."
        },
        "enrollmentDate": {
          "type": "string",
          "description": "Date when the user enrolled.",
          "format": "date-time"
        },
        "scholarshipCode": {
          "type": "string",
          "description": "Scholarship code applied by the user, if any."
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName",
        "enrollmentDate"
      ]
    },
    "Course": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Course",
      "type": "object",
      "description": "Represents a course offered on the Catalyst Academy platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the course entity."
        },
        "title": {
          "type": "string",
          "description": "Title of the course."
        },
        "description": {
          "type": "string",
          "description": "Description of the course."
        },
        "duration": {
          "type": "string",
          "description": "Duration of the course."
        },
        "modules": {
          "type": "array",
          "description": "Module ids in the course",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "duration"
      ]
    },
    "Module": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Module",
      "type": "object",
      "description": "Represents a module within a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the module entity."
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N Module)"
        },
        "title": {
          "type": "string",
          "description": "Title of the module."
        },
        "lessons": {
          "type": "array",
          "description": "References to lessons in the module (Relationship: Module 1:N Lesson)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "courseId",
        "title"
      ]
    },
    "Lesson": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Lesson",
      "type": "object",
      "description": "Represents a lesson within a module.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the lesson entity."
        },
        "moduleId": {
          "type": "string",
          "description": "Reference to Module. (Relationship: Module 1:N Lesson)"
        },
        "title": {
          "type": "string",
          "description": "Title of the lesson."
        },
        "duration": {
          "type": "string",
          "description": "Duration of the lesson."
        },
        "activityType": {
          "type": "string",
          "description": "Type of activity (e.g., video, quiz, reading)."
        },
        "resourceIds": {
          "type": "array",
          "description": "References to resources associated with the lesson. (Relationship: Lesson N:N Resource)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "moduleId",
        "title",
        "duration",
        "activityType"
      ]
    },
    "Resource": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Resource",
      "type": "object",
      "description": "Represents a resource (document, video, etc.) available to students.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the resource."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource (e.g., Document, Spreadsheet, PDF Guide, External Link)."
        },
        "url": {
          "type": "string",
          "description": "URL of the resource, if applicable.",
          "format": "uri"
        }
      },
      "required": [
        "title",
        "type"
      ]
    },
    "DiscussionPost": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DiscussionPost",
      "type": "object",
      "description": "Represents a single post in a discussion forum.",
      "properties": {
        "moduleId": {
          "type": "string",
          "description": "The ID of the module this post belongs to."
        },
        "authorId": {
          "type": "string",
          "description": "The ID of the user who created the post."
        },
        "authorName": {
          "type": "string",
          "description": "The name of the user who created the post."
        },
        "authorAvatar": {
          "type": "string",
          "description": "The avatar URL of the user who created the post."
        },
        "isFacilitator": {
          "type": "boolean",
          "description": "Whether the author is a facilitator."
        },
        "content": {
          "type": "string",
          "description": "The content of the post."
        },
        "createdAt": {
          "type": "object",
          "description": "The timestamp when the post was created."
        }
      },
      "required": [
        "moduleId",
        "authorId",
        "authorName",
        "content",
        "createdAt"
      ]
    },
    "UserCourseProgress": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserCourseProgress",
      "type": "object",
      "description": "Tracks a user's progress in a specific course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user course progress entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N UserCourseProgress)"
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N UserCourseProgress)"
        },
        "lastAccessedDate": {
          "type": "string",
          "description": "Date when the user last accessed the course.",
          "format": "date-time"
        },
        "completionPercentage": {
          "type": "number",
          "description": "Percentage of the course completed by the user."
        },
        "moduleProgress": {
          "type": "array",
          "description": "References to module progresses. (Relationship: UserCourseProgress 1:N ModuleProgress)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "courseId",
        "lastAccessedDate",
        "completionPercentage"
      ]
    },
    "ModuleProgress": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ModuleProgress",
      "type": "object",
      "description": "Tracks a user's progress in a specific module of a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user module progress entity."
        },
        "userCourseProgressId": {
          "type": "string",
          "description": "Reference to UserCourseProgress. (Relationship: UserCourseProgress 1:N ModuleProgress)"
        },
        "moduleId": {
          "type": "string",
          "description": "Reference to Module. (Relationship: Module 1:N ModuleProgress)"
        },
        "completionPercentage": {
          "type": "number",
          "description": "Percentage of the module completed by the user."
        },
        "lastAccessedDate": {
          "type": "string",
          "description": "Date when the user last accessed the course.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "moduleId",
        "completionPercentage"
      ]
    },
    "Certificate": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Certificate",
      "type": "object",
      "description": "Represents a certificate awarded to a user upon course completion.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the certificate entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Certificate)"
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N Certificate)"
        },
        "issueDate": {
          "type": "string",
          "description": "Date the certificate was issued.",
          "format": "date-time"
        },
        "certificateUrl": {
          "type": "string",
          "description": "URL of the generated certificate."
        }
      },
      "required": [
        "id",
        "userId",
        "courseId",
        "issueDate",
        "certificateUrl"
      ]
    },
    "Notebook": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Notebook",
      "type": "object",
      "description": "A user's notebook for storing notes.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the notebook."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns the notebook."
        },
        "createdAt": {
          "type": "object",
          "description": "The timestamp when the notebook was created."
        }
      },
      "required": [
        "name",
        "userId",
        "createdAt"
      ]
    },
    "Note": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Note",
      "type": "object",
      "description": "A single note within a notebook.",
      "properties": {
        "notebookId": {
          "type": "string",
          "description": "The ID of the notebook this note belongs to."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns the note."
        },
        "title": {
          "type": "string",
          "description": "The title of the note."
        },
        "content": {
          "type": "string",
          "description": "The content of the note."
        },
        "createdAt": {
          "type": "object",
          "description": "The timestamp when the note was created."
        }
      },
      "required": [
        "notebookId",
        "userId",
        "title",
        "createdAt"
      ]
    },
    "UserLessonProgress": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserLessonProgress",
      "type": "object",
      "description": "Tracks when a user completes a specific lesson.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who completed the lesson."
        },
        "lessonId": {
          "type": "string",
          "description": "The ID of the completed lesson."
        },
        "completedAt": {
          "type": "object",
          "description": "The timestamp when the lesson was marked as complete."
        }
      },
      "required": [
        "userId",
        "lessonId",
        "completedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles.  Accessible only by the user and admins. Contains personal information like email, name, and enrollment details.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}",
        "definition": {
          "entityName": "Course",
          "schema": {
            "$ref": "#/backend/entities/Course"
          },
          "description": "Stores course information, including title, description, and modules.  Accessible to all authenticated users for viewing course details.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}/modules/{moduleId}",
        "definition": {
          "entityName": "Module",
          "schema": {
            "$ref": "#/backend/entities/Module"
          },
          "description": "Stores module information within a course. Accessible to authenticated users who have access to the course.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            },
            {
              "name": "moduleId",
              "description": "The unique identifier for the module."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}/modules/{moduleId}/lessons/{lessonId}",
        "definition": {
          "entityName": "Lesson",
          "schema": {
            "$ref": "#/backend/entities/Lesson"
          },
          "description": "Stores lesson information within a module. Accessible to authenticated users who have access to the module and course.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            },
            {
              "name": "moduleId",
              "description": "The unique identifier for the module."
            },
            {
              "name": "lessonId",
              "description": "The unique identifier for the lesson."
            }
          ]
        }
      },
      {
        "path": "/resources/{resourceId}",
        "definition": {
          "entityName": "Resource",
          "schema": {
            "$ref": "#/backend/entities/Resource"
          },
          "description": "Stores resource information, such as URLs and categories.  Accessible to all authenticated users.",
          "params": [
            {
              "name": "resourceId",
              "description": "The unique identifier for the resource."
            }
          ]
        }
      },
      {
        "path": "/discussionPosts/{postId}",
        "definition": {
          "entityName": "DiscussionPost",
          "schema": {
            "$ref": "#/backend/entities/DiscussionPost"
          },
          "description": "Stores all discussion posts across all modules. Accessible to all authenticated users for viewing, and only by the author for writing.",
          "params": [
            {
              "name": "postId",
              "description": "The unique identifier for the discussion post."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/courseProgress/{courseProgressId}",
        "definition": {
          "entityName": "UserCourseProgress",
          "schema": {
            "$ref": "#/backend/entities/UserCourseProgress"
          },
          "description": "Tracks user's progress in a specific course. Accessible only by the user and admins.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "courseProgressId",
              "description": "The unique identifier for the user's progress in the course."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/courseProgress/{courseProgressId}/moduleProgress/{moduleProgressId}",
        "definition": {
          "entityName": "ModuleProgress",
          "schema": {
            "$ref": "#/backend/entities/ModuleProgress"
          },
          "description": "Tracks user's progress in a specific module of a course. Accessible only by the user and admins.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "courseProgressId",
              "description": "The unique identifier for the user's progress in the course."
            },
            {
              "name": "moduleProgressId",
              "description": "The unique identifier for the module progress."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/certificates/{certificateId}",
        "definition": {
          "entityName": "Certificate",
          "schema": {
            "$ref": "#/backend/entities/Certificate"
          },
          "description": "Stores certificates awarded to users upon course completion. Accessible only by the user and admins.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "certificateId",
              "description": "The unique identifier for the certificate."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/notebooks/{notebookId}",
        "definition": {
          "entityName": "Notebook",
          "schema": {
            "$ref": "#/backend/entities/Notebook"
          },
          "description": "Stores user's notebooks. Accessible only by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "notebookId",
              "description": "The unique identifier for the notebook."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/notes/{noteId}",
        "definition": {
          "entityName": "Note",
          "schema": {
            "$ref": "#/backend/entities/Note"
          },
          "description": "Stores user's notes. Accessible only by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "noteId",
              "description": "The unique identifier for the note."
            }
          ]
        }
      },
      {
        "path": "/userLessonProgress/{progressId}",
        "definition": {
          "entityName": "UserLessonProgress",
          "schema": {
            "$ref": "#/backend/entities/UserLessonProgress"
          },
          "description": "Tracks when a user completes a specific lesson. Stored in a top-level collection for easy querying across all users and lessons. Accessible for reads by the user and for writes only by the user.",
          "params": [
            {
              "name": "progressId",
              "description": "The unique identifier for the lesson progress record."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support the Catalyst Academy platform, focusing on courses, user progress, and community interaction. It emphasizes authorization independence and clear security rules. User-specific data (progress, certificates) is stored under the `/users/{userId}` path for private access. Course-related data (courses, modules, lessons, resources) is stored in top-level collections, enabling efficient listing and querying. Discussion threads and replies are nested under modules to maintain context and facilitate moderation. The structure uses denormalization where necessary to avoid complex security rules that require `get()` calls.\n\n**Authorization Independence:** User-specific data like `UserCourseProgress`, `ModuleProgress`, and `Certificate` are nested under `/users/{userId}`. This inherently ties the data's access control to the user's ID, removing the need for `get()` calls in security rules. For collaborative content like `DiscussionThread` and `DiscussionReply`, the `creatorId` field is used, which, although not strictly a membership map, allows simple checks against `request.auth.uid` for creation and modification.\n\n**QAPs (Rules are not Filters):** Segregation is used extensively. User data is separated from course content. Private user data resides under `/users/{userId}`, ensuring that listing operations are always secure. Public course content is stored in top-level collections, and its access is controlled based on user authentication (e.g., only authenticated users can access certain course details)."
  }
}

    